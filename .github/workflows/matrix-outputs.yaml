name: Matrix outputs

on:
  pull_request:

jobs:
  create-env:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prd]
        device: [android, ios]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create env json
        run: |
          prefix="${{ matrix.device }}_${{ matrix.environment }}"

          cat << EOF > ./out.json
          {
            "${prefix}_device": "${{ matrix.device }}",
            "${prefix}_environment": "${{ matrix.environment }}"
          }
          EOF

      - name: Save result to artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-${{ matrix.device }}-${{ matrix.environment }}
          path: ./out.json
          overwrite: true

  get-results:
    needs: create-env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all results
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Get Results
        id: result
        run: |
          devices=("android" "ios")
          environments=("dev" "prd")

          for device in "${devices[@]}"; do
            for environment in "${environments[@]}"; do
              file="env-${device}-${environment}/out.json"
              if [ -f "$file" ]; then
                echo "Processing $file"

                json=$(cat $file | jq '[to_entries[] | {(.key): .value}]')
                echo $json

                echo "$file" | jq -c 'to_entries[]' | while read -r item; do
                  key=$(echo "$item" | jq -r '.key')
                  value=$(echo "$item" | jq -r '.value')
                  echo "Key: $key, Value: $value"
                done

                for item in $(echo "$json" | jq -c '.[]'); do
                  echo $item
                  key=$(echo "$item" | jq -r '.key')
                  value=$(echo "$item" | jq -r '.value')
                  echo $key
                  echo $value
                  echo "${key}=${value}"
                  echo "${key}=${value}" >> "$GITHUB_OUTPUT"
                done
              else
                echo "File $file not found"
              fi
            done
          done

      - name: Show results
        run: |
          echo "${{ steps.result.outputs.ios_dev_environment }}"
          echo "${{ steps.result.outputs.ios_dev_device }}"
          echo "${{ steps.result.outputs.android_prd_environment }}"
          echo "${{ steps.result.outputs.android_prd_device }}"